#!/usr/bin/env python
import os
import sys
import argparse

parser = argparse.ArgumentParser(description='Add external music to mpd')
parser.add_argument('-m', '--mpd', type=str, default='/home/music', help='MPD music directory')
parser.add_argument('-d', '--directory', type=str, default='external', help='MPD Subdirectory for external music')
parser.add_argument('-p', '--play', action='store_true', help='Normaly without this option music you\'ve choosen is enqueued. When add this option only file will be played')
parser.add_argument('music', nargs='+', help='music files')


args = parser.parse_args()


dir = os.path.join(args.mpd, args.directory)

if not os.path.isdir(dir):
    print ("\nDirectory {0} don't exists\n".format(dir))
    parser.print_help()
    sys.exit(1)


def still_updating():
    return 'Updating DB' in os.popen('mpc').read()

links = []
for file in args.music:
    linkname = os.path.join(args.directory, os.path.basename(file))
    try:
        os.symlink(os.path.abspath(file), os.path.join(args.mpd, linkname))
    except OSError:
        pass
    print("Adding " + linkname)
    links.append(linkname)

os.system('mpc --no-status update {0} >/dev/null'.format(args.directory))

while still_updating():
    pass


if args.play:
    os.system('mpc --no-status clear')


for link in links:
    os.system('mpc --no-status add "{0}"'.format(link))

os.system("mpc --no-status play")
